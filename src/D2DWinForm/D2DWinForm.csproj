<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

  <Import Project="..\NativeLibraries.props" />
  
  <!-- Build properties -->
  <PropertyGroup>
    <!--<TargetFrameworks>net4.8;netcoreapp3.1</TargetFrameworks>-->
    <TargetFrameworks>net4.8</TargetFrameworks>
    <RootNamespace>unvell.D2DLib.WinForm</RootNamespace>
    <AssemblyName>d2dwinform</AssemblyName>
    <UseWindowsForms>true</UseWindowsForms>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
  </PropertyGroup>

  <!-- Package properties -->
  <PropertyGroup>
    <PackageId>D2DLib</PackageId>
    <PackageIcon>logo_d2dlib.png</PackageIcon>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>direct2d hardware-acceleration drawing draw custom-draw rendering paint gpu performance immediate bitmap memory-bitmap direct2d-api graphics-context</PackageTags>
    <RepositoryUrl>https://github.com/PauloHMattos/d2dlib</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\D2DLibExport\D2DLibExport.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\package\logo_d2dlib.png" Pack="true" PackagePath="\" />
  </ItemGroup>
  <!--
  Ensure ProjectReference output DLL is included in the package.
  Workaround from: https://github.com/nuget/home/issues/3891#issuecomment-377319939
  -->
  
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'all'))" />
    </ItemGroup>
  </Target>

</Project>